name: deploy-production
on:
  workflow_dispatch:
jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: "8.2"
      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - uses: actions/checkout@v4
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Install npm dependencies
        run: npm install
      - name: Execute npm scripts
        run: npm run build
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan test

  build:
    needs: laravel-tests
    runs-on: ubuntu-latest
    steps:
      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: "8.2"
      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - uses: actions/checkout@v4
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader --no-dev
      - name: Install npm dependencies
        run: npm install
      - name: Generate key
        run: php artisan key:generate
      - name: Write need Data into .env
        run: |
          echo APP_URL=${{ vars.URL_PRODUCTION }} >> .env
          echo ASSET_URL=${{ vars.URL_PRODUCTION }} >> .env
      - name: Execute npm scripts
        run: npm run build
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Remote .env to send
        run: rm .env
      - name: Copy to Host all project
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rlgoDzvc -i --delete"
          SOURCE: "*"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USERNAME }}
          REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
          TARGET: ${{ vars.PATH_PRODUCTION }}public_html/bot/
          EXCLUDE: "/node_modules/"
          SCRIPT_BEFORE: ${{ vars.PATH_PRODUCTION }}/clean_to_deploy.sh
          SCRIPT_AFTER: ${{ vars.PATH_PRODUCTION }}/deploy.sh
